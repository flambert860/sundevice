<?php
/**
* 2007-2018 PrestaShop
*
* NOTICE OF LICENSE
*
* This source file is subject to the Academic Free License (AFL 3.0)
* that is bundled with this package in the file LICENSE.txt.
* It is also available through the world-wide-web at this URL:
* http://opensource.org/licenses/afl-3.0.php
* If you did not receive a copy of the license and are unable to
* obtain it through the world-wide-web, please send an email
* to license@prestashop.com so we can send you a copy immediately.
*
* DISCLAIMER
*
* Do not edit or add to this file if you wish to upgrade PrestaShop to newer
* versions in the future. If you wish to customize PrestaShop for your
* needs please refer to http://www.prestashop.com for more information.
*
*  @author    PrestaShop SA <contact@prestashop.com>
*  @copyright 2007-2018 PrestaShop SA
*  @license   http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
*  International Registered Trademark & Property of PrestaShop SA
*/

class CartController extends CartControllerCore
{

    /**
     * This process add or update a product in the cart
     */
    protected function processChangeProductInCart()
    {
        if (version_compare(_PS_VERSION_, '1.7', '<')) {
            if (Configuration::get('JMARKETPLACE_SHOW_MANAGE_CARRIER') == 1 && Module::isEnabled('jmarketplace')) {
                CartControllerCore::processChangeProductInCart();
                $this->deleteProductOtherSeller();
            }
            else {
                CartControllerCore::processChangeProductInCart();
            }
        }
        else {
            CartControllerCore::processChangeProductInCart();
        }
    }
    
    public function deleteProductOtherSeller() {
        if ($this->context->cart->id) {
            $product_array = $this->context->cart->getLastProduct();
            $id_seller = Seller::getSellerByProduct($product_array['id_product']);
            $cart_products = $this->context->cart->getProducts();
            if (is_array($cart_products)) {
                foreach ($cart_products as $cart_product) {
                    $id_seller_old = Seller::getSellerByProduct($cart_product['id_product']);
                    if ($id_seller_old != $id_seller)
                        $this->context->cart->deleteProduct($cart_product['id_product']);
                }
            }
        }
    }
}
